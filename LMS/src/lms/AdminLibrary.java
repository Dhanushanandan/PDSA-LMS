/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lms;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lms.Books;

/**
 *
 * @author danus
 */
public class AdminLibrary extends javax.swing.JFrame {

    /**
     * Creates new form AdminLibrary
     */
    MyLinkedList<Object> list = new MyLinkedList<>();
    MyLinkedList<Object> list1 = new MyLinkedList<>();
    Database db = new Database();
    Connection con = db.DBConnect();

    String uid1 = "";
    String name1 = "";
    String pass1 = "";
    String address1 = "";
    int mobile1 = 0;
    String email1 = "";
    String Type1 = "";

    public AdminLibrary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton15 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, -1));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("<html> <p align=\"justify\">A library is a collection of books, periodicals, newspapers, and other materials that are available for public use or loan. Giving everyone access to knowledge and information regardless of background or ability to pay. Libraries act as a hub for research, education, and leisure, enabling people to broaden their horizons, explore new ideas, and connect with like-minded individuals. Libraries also provide services beyond book lending, such as computer access, educational programs, and community events.</p></html");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 310, 430));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Close all jframe.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 0, 30, 30));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Remove Books");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 460, 130, 40));

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("Update Books");
        jButton2.setBorder(new javax.swing.border.MatteBorder(null));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 460, 130, 40));

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("View Books");
        jButton3.setBorder(new javax.swing.border.MatteBorder(null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 460, 130, 40));

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("HOME");
        jButton5.setBorder(new javax.swing.border.MatteBorder(null));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 130, 40));

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("ADD Books");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 130, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.jpeg"))); // NOI18N
        jLabel1.setText("\n");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -52, 1050, 790));

        jTabbedPane1.addTab("Dash Board", jPanel1);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Book ID");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 260, 40));

        jLabel15.setBackground(new java.awt.Color(51, 255, 255));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Book Name");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, -1, -1));

        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 260, 40));

        jLabel17.setBackground(new java.awt.Color(51, 255, 255));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Book Author");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, -1, -1));

        jTextField4.setBackground(new java.awt.Color(255, 255, 255));
        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 330, 260, 40));

        jButton13.setBackground(new java.awt.Color(204, 204, 204));
        jButton13.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton13.setForeground(new java.awt.Color(0, 0, 0));
        jButton13.setText("Clear");
        jButton13.setBorder(new javax.swing.border.MatteBorder(null));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 420, 110, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BOOK DETAILS");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 270, 40));

        jButton15.setBackground(new java.awt.Color(204, 204, 204));
        jButton15.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton15.setForeground(new java.awt.Color(0, 0, 0));
        jButton15.setText("ADD");
        jButton15.setBorder(new javax.swing.border.MatteBorder(null));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 420, 130, 40));

        jButton7.setBackground(new java.awt.Color(204, 204, 204));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setText("HOME");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 120, 40));

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/R.jpeg"))); // NOI18N
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 730));

        jTabbedPane1.addTab("ADD Book", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("BOOK DETAILS");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 270, 40));

        jTable1.setBackground(new java.awt.Color(153, 153, 153));
        jTable1.setBorder(new javax.swing.border.MatteBorder(null));
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(jTable1);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 810, 310));

        jButton8.setBackground(new java.awt.Color(204, 204, 204));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setText("HOME");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 120, 40));

        jButton11.setBackground(new java.awt.Color(116, 105, 182));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setText("Search");
        jButton11.setBorder(null);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 80, 30));
        jPanel5.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, 190, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/photo-1485322551133-3a4c27a9d925.jpeg"))); // NOI18N
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 670));

        jTabbedPane1.addTab("View Book", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setBackground(new java.awt.Color(153, 153, 153));
        jTable2.setBorder(new javax.swing.border.MatteBorder(null));
        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(0, 0, 0));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane2.setViewportView(jTable2);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 800, 210));

        jButton9.setBackground(new java.awt.Color(204, 204, 204));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("HOME");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 120, 40));

        jTextField5.setBackground(new java.awt.Color(255, 255, 255));
        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, 260, 40));

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Book ID");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, -1, -1));

        jButton16.setBackground(new java.awt.Color(204, 204, 204));
        jButton16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton16.setForeground(new java.awt.Color(0, 0, 0));
        jButton16.setText("REMOVE");
        jButton16.setBorder(new javax.swing.border.MatteBorder(null));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 420, 130, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/photo-1526243741027-444d633d7365.jpeg"))); // NOI18N
        jPanel6.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 670));

        jTabbedPane1.addTab("Remove Book", jPanel6);

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("BOOK DETAILS");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 270, 40));

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Book ID");
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        jTextField6.setBackground(new java.awt.Color(255, 255, 255));
        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 260, 40));

        jLabel19.setBackground(new java.awt.Color(51, 255, 255));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Book Name");
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, -1, -1));

        jTextField7.setBackground(new java.awt.Color(255, 255, 255));
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, 260, 40));

        jLabel20.setBackground(new java.awt.Color(51, 255, 255));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Book Author");
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, -1, -1));

        jTextField8.setBackground(new java.awt.Color(255, 255, 255));
        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(0, 0, 0));
        jPanel7.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 330, 260, 40));

        jButton14.setBackground(new java.awt.Color(204, 204, 204));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton14.setForeground(new java.awt.Color(0, 0, 0));
        jButton14.setText("Clear");
        jButton14.setBorder(new javax.swing.border.MatteBorder(null));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 420, 110, 40));

        jButton17.setBackground(new java.awt.Color(204, 204, 204));
        jButton17.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton17.setForeground(new java.awt.Color(0, 0, 0));
        jButton17.setText("Update");
        jButton17.setBorder(new javax.swing.border.MatteBorder(null));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 420, 130, 40));

        jButton10.setBackground(new java.awt.Color(204, 204, 204));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 0));
        jButton10.setText("HOME");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 120, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/R.jpeg"))); // NOI18N
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 690));

        jTabbedPane1.addTab("Update Book", jPanel7);

        jTabbedPane1.setSelectedIndex(4);

        jPanel3.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, -1, 630));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here
        jTabbedPane1.setSelectedIndex(3);
        //if clicked again refresh the table to avoid the duplicate values
        jTable2.setModel(new DefaultTableModel());
        list.head = null;
        try {
            String qry = "Select * from book";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);

                String bid, bname, bauthor;
                while (rs.next()) {
                    bid = rs.getString(1);
                    bname = rs.getString(2);
                    bauthor = rs.getString(3);
                    Books b = new Books(bid, bname, bauthor);
                    list.add(b);
                }

            }

//            list.display();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setColumnCount(0);

            String[] columnNames = {"Book ID", "Book Name", "Book Author"};
            model.setColumnIdentifiers(columnNames);

            Node currentNode = list.head;
            while (currentNode != null) {
                Books b1 = (Books) currentNode.data;
                model.addRow(new Object[]{b1.getBookid(), b1.getBookname(), b1.getBookauthor()});
                currentNode = currentNode.next;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(4);
        list.head = null;
        try {
            String qry = "Select * from book";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();

            String bid, bname, bauthor;
            while (rs.next()) {
                bid = rs.getString(1);
                bname = rs.getString(2);
                bauthor = rs.getString(3);
                Books b = new Books(bid, bname, bauthor);
                list.add(b);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(2);
        //if clicked again refresh the table to avoid the duplicate values
        jTable1.setModel(new DefaultTableModel());
        list.head = null;
        try {
            String qry = "Select * from book";
            PreparedStatement p = con.prepareStatement(qry);
            ResultSet rs = p.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();

            int cols = rsmd.getColumnCount();
            String[] colName = new String[cols];
            for (int i = 0; i < cols; i++) {
                colName[i] = rsmd.getColumnName(i + 1);

                String bid, bname, bauthor;
                while (rs.next()) {
                    bid = rs.getString(1);
                    bname = rs.getString(2);
                    bauthor = rs.getString(3);
                    Books b = new Books(bid, bname, bauthor);
                    list.add(b);
                }

            }

//            list.display();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setColumnCount(0);

            String[] columnNames = {"Book ID", "Book Name", "Book Author"};
            model.setColumnIdentifiers(columnNames);

            Node currentNode = list.head;
            while (currentNode != null) {
                Books b1 = (Books) currentNode.data;
                model.addRow(new Object[]{b1.getBookid(), b1.getBookname(), b1.getBookauthor()});
                currentNode = currentNode.next;
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
        d.show();
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        list.head = null;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_formWindowOpened

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField2.requestFocus();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
//            list.head=null;
        int value = 1, value1 = 0;
        try {

            if (jTextField2.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK ID");
                jTextField2.requestFocus();
            } else if (jTextField3.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK Name");
                jTextField3.requestFocus();
            } else if (jTextField4.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK Author");
                jTextField4.requestFocus();
            } else {
                String bid = jTextField2.getText();
                String bname = jTextField3.getText();
                String bauthor = jTextField4.getText();

                Node currentNode = list.head;
                while (currentNode != null) {
                    Books book = (Books) currentNode.data;

                    if (book.getBookid().equals(bid)) {
                        value = 0;
                        break;
                    }
                    currentNode = currentNode.next;
//                    value=1;
                }
                if (value == 1) {
                    String qry = "Select * from book";
                    PreparedStatement p = con.prepareStatement(qry);
                    ResultSet rs = p.executeQuery();

                    while (rs.next()) {
                        String bid1 = rs.getString(1);
                        String bname1 = rs.getString(2);
                        String bauthor1 = rs.getString(3);
                        Books b1 = new Books(bid1, bname1, bauthor1);
                        list1.add(b1);
                    }

                    Node currentNode1 = list1.head;
                    while (currentNode1 != null) {
                        Books book1 = (Books) currentNode1.data;

                        if (book1.getBookid().equals(bid)) {
                            value1 = 1;
                            break;
                        }
                        currentNode1 = currentNode1.next;
//                    value=1;
                    }

                    if (value1 == 1) {
                        JOptionPane.showMessageDialog(null, "Book ID ALREADY EXIST IN THE DATABASE");
                        jTextField2.setText("");
                        jTextField2.requestFocus();
                    } else {

                        Books b = new Books(bid, bname, bauthor);
                        list.add(b);
//                    list.display();
                        JOptionPane.showMessageDialog(null, "Insert Complete");
                        jTextField2.setText("");
                        jTextField3.setText("");
                        jTextField4.setText("");
                        jTextField2.requestFocus();
                    }
                } else if (value == 0) {
                    JOptionPane.showMessageDialog(null, "Book ID ALREADY EXIST IN THE LIST");
                    jTextField2.setText("");
                    jTextField2.requestFocus();
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here
        try {

            Node currentNode = list.head;
            while (currentNode != null) {
                Books book = (Books) currentNode.data;
                String sql = "insert into book values(?,?,?)";
                PreparedStatement p = con.prepareStatement(sql);

                p.setString(1, book.getBookid());
                p.setString(2, book.getBookname());
                p.setString(3, book.getBookauthor());
                p.executeUpdate();
                currentNode = currentNode.next;
            }
            Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
            d.show();
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
        d.show();
        this.dispose();


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            String sql1 = "TRUNCATE TABLE book";
            PreparedStatement p1 = con.prepareStatement(sql1);
            p1.executeUpdate();

            Node currentNode = list.head;
            while (currentNode != null) {
                Books book = (Books) currentNode.data;
                String sql = "insert into book values(?,?,?)";
                PreparedStatement p = con.prepareStatement(sql);

                p.setString(1, book.getBookid());
                p.setString(2, book.getBookname());
                p.setString(3, book.getBookauthor());
                p.executeUpdate();
                currentNode = currentNode.next;
            }
            Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
            d.show();
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

//        Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
//        d.show();
//        this.dispose();

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        list.display();
        Books obook = null;
        int value1 = 0;
        String bid = jTextField5.getText();
        if (jTextField5.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a BOOK ID");
            jTextField5.requestFocus();
        } else {
            Node currentNode1 = list.head;
            while (currentNode1 != null) {
                Books book1 = (Books) currentNode1.data;

                if (book1.getBookid().equals(bid)) {
                    value1 = 1;
                    obook = book1;
                    break;
                }
                currentNode1 = currentNode1.next;
//                    value=1;
            }

            if (value1 == 1) {
                list.remove(obook);
                JOptionPane.showMessageDialog(null, "Book REMOVED SUCCESS");
//                        list.display();

                //if clicked again refresh the table to avoid the duplicate values
                jTable2.setModel(new DefaultTableModel());
                try {
                    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                    model.setColumnCount(0);

                    String[] columnNames = {"Book ID", "Book Name", "Book Author"};
                    model.setColumnIdentifiers(columnNames);

                    Node currentNode = list.head;
                    while (currentNode != null) {
                        Books b1 = (Books) currentNode.data;
                        model.addRow(new Object[]{b1.getBookid(), b1.getBookname(), b1.getBookauthor()});
                        currentNode = currentNode.next;
                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Book ID DOES NOT EXIST IN THE DATABASE");
                jTextField5.setText("");
                jTextField5.requestFocus();
            }

        }

    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField6.requestFocus();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
//        list.head = null;
        int value = 0;
        try {
            if (jTextField6.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK ID");
                jTextField6.requestFocus();
            } else if (jTextField7.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK Name");
                jTextField7.requestFocus();
            } else if (jTextField8.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Enter a BOOK Author");
                jTextField8.requestFocus();
            } else {
                String bid1 = jTextField6.getText();
                String bname1 = jTextField7.getText();
                String bauthor1 = jTextField8.getText();

                /////////////////////////////////////////////
                Node currentNode = list.head;
                while (currentNode != null) {
                    Books book = (Books) currentNode.data;

                    if (book.getBookid().equals(bid1)) {
//                        list.remove(book);
//                        book.setBookid(bid1);
                        book.setBookname(bname1);
                        book.setBookauthor(bauthor1);
                        value = 1;
                        break;
                    }
//                     value=1;

                    currentNode = currentNode.next;
                }
                if (value == 1) {
                    JOptionPane.showMessageDialog(null, "BOOK IS UPDATED");
                } else if (value == 0) {
                    JOptionPane.showMessageDialog(null, "BOOK IS NOT FOUND");
                }
                jTextField6.setText("");
                jTextField7.setText("");
                jTextField8.setText("");
                jTextField6.requestFocus();

                //////////////////////////////////////////////
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {
            String sql1 = "Truncate Table book";
            PreparedStatement p1 = con.prepareStatement(sql1);

            p1.executeUpdate();

            Node currentNode = list.head;
            while (currentNode != null) {
                Books book = (Books) currentNode.data;
                String sql = "insert into book values(?,?,?)";
                PreparedStatement p = con.prepareStatement(sql);

                p.setString(1, book.getBookid());
                p.setString(2, book.getBookname());
                p.setString(3, book.getBookauthor());
                p.executeUpdate();
                currentNode = currentNode.next;
            }
            Admindash d = new Admindash(uid1, name1, pass1, address1, mobile1, email1, Type1);
            d.show();
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
                jTable1.setModel(new DefaultTableModel());
        String search = jTextField1.getText();
        list1.head = null;

        if (search.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a valid input Book Id,Name or which Author ");
            jTextField1.setText("");
            jTextField1.requestFocus();

        } else {
            Node currentNode = list.head;
            while (currentNode != null) {
                Books b1 = (Books) currentNode.data;
                String tid = b1.getBookid();
                String tname = b1.getBookname();
                String tauthor = b1.getBookauthor();
                if (tid.equals(search) || tname.equals(search) || tauthor.equals(search)) {
                    list1.add(b1);
                }
                currentNode = currentNode.next;
            }

            if (list1.isempty()) {
                JOptionPane.showMessageDialog(null, "NO Result found");
                jTable1.setModel(new DefaultTableModel());
//                list.head = null;
                try {
//                    String qry = "Select * from book";
//                    PreparedStatement p = con.prepareStatement(qry);
//                    ResultSet rs = p.executeQuery();
//                    ResultSetMetaData rsmd = rs.getMetaData();
//
//                    int cols = rsmd.getColumnCount();
//                    String[] colName = new String[cols];
//                    for (int i = 0; i < cols; i++) {
//                        colName[i] = rsmd.getColumnName(i + 1);
//
//                        String bid, bname, bauthor;
//                        while (rs.next()) {
//                            bid = rs.getString(1);
//                            bname = rs.getString(2);
//                            bauthor = rs.getString(3);
//                            Books b = new Books(bid, bname, bauthor);
//                            list.add(b);
//                        }
//
//                    }

//            list.display();
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    model.setColumnCount(0);

                    String[] columnNames = {"Book ID", "Book Name", "Book Author"};
                    model.setColumnIdentifiers(columnNames);

                    Node currentNode1 = list.head;
                    while (currentNode1 != null) {
                        Books b1 = (Books) currentNode1.data;
                        model.addRow(new Object[]{b1.getBookid(), b1.getBookname(), b1.getBookauthor()});
                        currentNode1 = currentNode1.next;
                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }

            } else {
                jTable1.setModel(new DefaultTableModel());
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setColumnCount(0);

                String[] columnNames = {"Book ID", "Book Name", "Book Author"};
                model.setColumnIdentifiers(columnNames);

                Node currentNode1 = list1.head;
                while (currentNode1 != null) {
                    Books b1 = (Books) currentNode1.data;
                    model.addRow(new Object[]{b1.getBookid(), b1.getBookname(), b1.getBookauthor()});
                    currentNode1 = currentNode1.next;
                }
            }
        }

//                PreparedStatement p = con.prepareStatement("Select * from book Where bookid=? OR bookName=? OR bookauthor=?");
//                p.setString(1, search);
//                p.setString(2, search);
//                p.setString(3, search);
//                ResultSet rs = p.executeQuery();
//                ResultSetMetaData rsmd = rs.getMetaData();
//                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//
//                int cols = rsmd.getColumnCount();
//                String[] colName = new String[cols];
//                for (int i = 0; i < cols; i++) {
//                    colName[i] = rsmd.getColumnName(i + 1);
//                    model.setColumnIdentifiers(colName);
//
//                    String id, name, sp;
//                    while (rs.next()) {
//                        id = rs.getString(1);
//                        name = rs.getString(2);
//                        sp = rs.getString(3);
//                        Name = name;
//                        String[] row = {id, name, sp};
//                        model.addRow(row);
//                    }
//
//                }
//                if (Name.equals("")) {
//                    JOptionPane.showMessageDialog(null, "NO Result found");
//                    try {
//                        //if clicked again refresh the table to avoid the duplicate values
//                        jTable1.setModel(new DefaultTableModel());
//
//                        String qry = "Select * from book";
//                        PreparedStatement p1 = con.prepareStatement(qry);
//                        ResultSet rs1 = p1.executeQuery(qry);
//                        ResultSetMetaData rsmd1 = rs1.getMetaData();
//                        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
//
//                        int cols1 = rsmd1.getColumnCount();
//                        String[] colName1 = new String[cols1];
//                        for (int i = 0; i < cols1; i++) {
//                            colName1[i] = rsmd1.getColumnName(i + 1);
//                            model1.setColumnIdentifiers(colName1);
//
//                            String id, name, sp;
//                            while (rs1.next()) {
//                                id = rs1.getString(1);
//                                name = rs1.getString(2);
//                                sp = rs1.getString(3);
//
//                                String[] row1 = {id, name, sp};
//                                model1.addRow(row1);
//                            }
//                        }
//
//                    } catch (Exception ex) {
//                        JOptionPane.showMessageDialog(null, ex);
//                    }
//                }
//            }
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminLibrary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminLibrary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
